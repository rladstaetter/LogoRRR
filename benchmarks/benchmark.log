# JMH version: 1.37
# VM version: JDK 24.0.1, OpenJDK 64-Bit Server VM, 24.0.1+9-jvmci-b01
# VM invoker: /Users/lad/.sdkman/candidates/java/24.0.1-graalce/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: app.logorrr.LogoRRRBenchmark.benchmarkDrawRect

# Run progress: 0,00% complete, ETA 00:01:40
# Fork: 1 of 5
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::objectFieldOffset has been called by org.openjdk.jmh.util.Utils (file:/Users/lad/gh/LogoRRR/benchmarks/target/benchmarks.jar)
WARNING: Please consider reporting this to the maintainers of class org.openjdk.jmh.util.Utils
WARNING: sun.misc.Unsafe::objectFieldOffset will be removed in a future release
# Warmup Iteration   1: 125148,887 ops/s
# Warmup Iteration   2: 135426,446 ops/s
# Warmup Iteration   3: 136894,526 ops/s
# Warmup Iteration   4: 135909,406 ops/s
# Warmup Iteration   5: 136579,492 ops/s
# Warmup Iteration   6: 137411,317 ops/s
# Warmup Iteration   7: 137038,260 ops/s
# Warmup Iteration   8: 136318,485 ops/s
# Warmup Iteration   9: 136780,999 ops/s
# Warmup Iteration  10: 137351,254 ops/s
Iteration   1: 137486,169 ops/s
Iteration   2: 137561,726 ops/s
Iteration   3: 137161,343 ops/s
Iteration   4: 134948,043 ops/s
Iteration   5: 136095,796 ops/s
Iteration   6: 136993,642 ops/s
Iteration   7: 137446,306 ops/s
Iteration   8: 136921,432 ops/s
Iteration   9: 137320,924 ops/s
Iteration  10: 137686,440 ops/s

# Run progress: 20,00% complete, ETA 00:01:21
# Fork: 2 of 5
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::objectFieldOffset has been called by org.openjdk.jmh.util.Utils (file:/Users/lad/gh/LogoRRR/benchmarks/target/benchmarks.jar)
WARNING: Please consider reporting this to the maintainers of class org.openjdk.jmh.util.Utils
WARNING: sun.misc.Unsafe::objectFieldOffset will be removed in a future release
# Warmup Iteration   1: 127692,034 ops/s
# Warmup Iteration   2: 135469,431 ops/s
# Warmup Iteration   3: 136746,785 ops/s
# Warmup Iteration   4: 136725,851 ops/s
# Warmup Iteration   5: 136451,065 ops/s
# Warmup Iteration   6: 136270,415 ops/s
# Warmup Iteration   7: 137136,515 ops/s
# Warmup Iteration   8: 136297,510 ops/s
# Warmup Iteration   9: 137411,811 ops/s
# Warmup Iteration  10: 136643,070 ops/s
Iteration   1: 137334,670 ops/s
Iteration   2: 137479,714 ops/s
Iteration   3: 136873,831 ops/s
Iteration   4: 137325,714 ops/s
Iteration   5: 137343,501 ops/s
Iteration   6: 137132,862 ops/s
Iteration   7: 137249,725 ops/s
Iteration   8: 137094,726 ops/s
Iteration   9: 136604,446 ops/s
Iteration  10: 137586,637 ops/s

# Run progress: 40,00% complete, ETA 00:01:00
# Fork: 3 of 5
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::objectFieldOffset has been called by org.openjdk.jmh.util.Utils (file:/Users/lad/gh/LogoRRR/benchmarks/target/benchmarks.jar)
WARNING: Please consider reporting this to the maintainers of class org.openjdk.jmh.util.Utils
WARNING: sun.misc.Unsafe::objectFieldOffset will be removed in a future release
# Warmup Iteration   1: 127839,398 ops/s
# Warmup Iteration   2: 134480,033 ops/s
# Warmup Iteration   3: 137222,207 ops/s
# Warmup Iteration   4: 136965,670 ops/s
# Warmup Iteration   5: 137351,355 ops/s
# Warmup Iteration   6: 135903,870 ops/s
# Warmup Iteration   7: 137322,629 ops/s
# Warmup Iteration   8: 136540,905 ops/s
# Warmup Iteration   9: 137063,038 ops/s
# Warmup Iteration  10: 136334,993 ops/s
Iteration   1: 137505,999 ops/s
Iteration   2: 136947,480 ops/s
Iteration   3: 137204,631 ops/s
Iteration   4: 137394,522 ops/s
Iteration   5: 136583,902 ops/s
Iteration   6: 137145,738 ops/s
Iteration   7: 136924,572 ops/s
Iteration   8: 135971,048 ops/s
Iteration   9: 137507,034 ops/s
Iteration  10: 136913,690 ops/s

# Run progress: 60,00% complete, ETA 00:00:40
# Fork: 4 of 5
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::objectFieldOffset has been called by org.openjdk.jmh.util.Utils (file:/Users/lad/gh/LogoRRR/benchmarks/target/benchmarks.jar)
WARNING: Please consider reporting this to the maintainers of class org.openjdk.jmh.util.Utils
WARNING: sun.misc.Unsafe::objectFieldOffset will be removed in a future release
# Warmup Iteration   1: 127064,539 ops/s
# Warmup Iteration   2: 134988,235 ops/s
# Warmup Iteration   3: 136723,593 ops/s
# Warmup Iteration   4: 137131,162 ops/s
# Warmup Iteration   5: 137126,985 ops/s
# Warmup Iteration   6: 136960,788 ops/s
# Warmup Iteration   7: 137266,546 ops/s
# Warmup Iteration   8: 137106,925 ops/s
# Warmup Iteration   9: 137630,396 ops/s
# Warmup Iteration  10: 137184,425 ops/s
Iteration   1: 137486,896 ops/s
Iteration   2: 137031,724 ops/s
Iteration   3: 137051,000 ops/s
Iteration   4: 137457,826 ops/s
Iteration   5: 136966,410 ops/s
Iteration   6: 136901,822 ops/s
Iteration   7: 137256,237 ops/s
Iteration   8: 137038,284 ops/s
Iteration   9: 137346,584 ops/s
Iteration  10: 136905,613 ops/s

# Run progress: 80,00% complete, ETA 00:00:20
# Fork: 5 of 5
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::objectFieldOffset has been called by org.openjdk.jmh.util.Utils (file:/Users/lad/gh/LogoRRR/benchmarks/target/benchmarks.jar)
WARNING: Please consider reporting this to the maintainers of class org.openjdk.jmh.util.Utils
WARNING: sun.misc.Unsafe::objectFieldOffset will be removed in a future release
# Warmup Iteration   1: 127339,255 ops/s
# Warmup Iteration   2: 135095,852 ops/s
# Warmup Iteration   3: 136566,740 ops/s
# Warmup Iteration   4: 126688,986 ops/s
# Warmup Iteration   5: 137333,163 ops/s
# Warmup Iteration   6: 136903,975 ops/s
# Warmup Iteration   7: 136067,760 ops/s
# Warmup Iteration   8: 136408,160 ops/s
# Warmup Iteration   9: 137363,579 ops/s
# Warmup Iteration  10: 137354,992 ops/s
Iteration   1: 137017,119 ops/s
Iteration   2: 137408,887 ops/s
Iteration   3: 137436,071 ops/s
Iteration   4: 137161,720 ops/s
Iteration   5: 136832,556 ops/s
Iteration   6: 137110,894 ops/s
Iteration   7: 137426,903 ops/s
Iteration   8: 136547,511 ops/s
Iteration   9: 136701,237 ops/s
Iteration  10: 137117,563 ops/s


Result "app.logorrr.LogoRRRBenchmark.benchmarkDrawRect":
  137078,982 ±(99.9%) 232,371 ops/s [Average]
  (min, avg, max) = (134948,043, 137078,982, 137686,440), stdev = 469,401
  CI (99.9%): [136846,612, 137311,353] (assumes normal distribution)


# Run complete. Total time: 00:01:41

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                            Mode  Cnt       Score     Error  Units
LogoRRRBenchmark.benchmarkDrawRect  thrpt   50  137078,982 ± 232,371  ops/s
