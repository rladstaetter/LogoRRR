<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>app.logorrr</groupId>
    <artifactId>logorrr</artifactId>
    <version>${revision}${changelist}</version>
    <name>app.logorrr</name>
    <description>LogoRRR - the log visualisation tool</description>
    <packaging>pom</packaging>
    <properties>
        <!-- make sure you either set following properties here or in your settings xml (preferred) -->
        <!--
            <jdk.home>/path/to/jdk</jdk.home> (mac, linux, windows)
            <graalvm.home>/path/to/graalvm</graalvm.home> (mac, linux, windows)
            -->
        <revision>25.1.0</revision>
        <scala.major.version>2.13</scala.major.version>
        <scala.version>${scala.major.version}.16</scala.version>
        <openjfx.version>24.0.1</openjfx.version>
        <ikonli.version>12.3.1</ikonli.version>
        <!-- check https://github.com/gluonhq/graal/releases/ for latest gluon graal release -->
        <gluonfx.plugin.version>1.0.26</gluonfx.plugin.version>
        <!-- no need to change these -->
        <changelist>-SNAPSHOT</changelist>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>app.logorrr.LogoRRRApp</main.class>
        <main.launcher.class>app.logorrr.LogoRRRAppLauncher</main.launcher.class>
        <graalvm.log>${project.build.directory}/graal.log</graalvm.log>
        <jdk.jlink.binary>${jdk.home}/bin/jlink</jdk.jlink.binary>
        <jdk.jpackage.binary>${jdk.home}/bin/jpackage</jdk.jpackage.binary>
        <jmh.version>1.37</jmh.version>
        <windows.temurin.version>
            https://github.com/adoptium/temurin22-binaries/releases/download/jdk-22.0.1%2B8/OpenJDK22U-jre_x64_windows_hotspot_22.0.1_8.zip
        </windows.temurin.version>
    </properties>
    <scm>
        <connection>scm:git:https://github.com/rladstaetter/LogoRRR.git</connection>
        <developerConnection>scm:git:https://github.com/rladstaetter/LogoRRR.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <profiles>
        <profile>
            <id>OS.windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <!-- check https://github.com/gluonhq/graal/releases/ for latest gluon graal release -->
                <!-- graalvm builds disabled until https://github.com/rladstaetter/LogoRRR/issues/91
                        <graalvm.home>C:\Program Files\Java\graalvm-svm-java11-windows-gluon-22.1.0.1-Final</graalvm.home>
                        -->
                <!-- see also dist/dist-win/pom.xml! -->
                <openjfx.os.prefix>windows</openjfx.os.prefix>
            </properties>
        </profile>
        <profile>
            <id>OS.linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                </os>
            </activation>
            <properties>
                <openjfx.os.prefix>linux</openjfx.os.prefix>
            </properties>
        </profile>
        <profile>
            <id>OS.osx</id>
            <activation>
                <os>
                    <name>mac os x</name>
                </os>
            </activation>
            <properties>
                <jdk.javac>${jdk.home}/bin/javac</jdk.javac>
                <jdk.javah>${jdk.home}/bin/javah</jdk.javah>
                <openjfx.os.prefix>osx</openjfx.os.prefix>
            </properties>
            <modules>
                <module>native</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-property</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>mac.signingkey.username</property>
                                            <message>You must set property 'mac.signingkey.username' to create
                                                a signed pkg file. A valid entry has to have the following form: 'John
                                                Doe (ABCDEFGHIJ)'
                                            </message>
                                        </requireProperty>
                                        <!--
                                                            <requireProperty>
                                                                <property>graalvm.home</property>
                                                                <message>You have to set 'graalvm.home' and point to a correct graalvm
                                                                    installation.
                                                                </message>
                                                            </requireProperty>
                                                            -->
                                        <requireProperty>
                                            <property>jdk.home</property>
                                            <message>You have to set 'jdk.home' and it must point to a valid jdk
                                                installation (Tip: use SDKMan.io to install)
                                            </message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>osx.swiftc</property>
                                            <message>You have to set 'osx.swiftc' to the swiftc compiler.</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>osx.gcc</property>
                                            <message>You have to set 'osx.gcc' to the gcc compiler.</message>
                                        </requireProperty>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>benchmarks</id>
            <modules>
                <module>benchmarks</module>
            </modules>
        </profile>
        <profile>
            <id>app-tests</id>
            <modules>
                <module>app-tests</module>
            </modules>
        </profile>
    </profiles>
    <modules>
        <module>core</module>
        <module>build</module>
        <module>env</module>
        <module>app</module>
        <module>dist</module>
        <module>docs</module>
    </modules>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testfx</groupId>
                <artifactId>testfx-core</artifactId>
                <version>4.0.18</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testfx</groupId>
                <artifactId>openjfx-monocle</artifactId>
                <version>21.0.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${openjfx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-swing</artifactId>
                <version>${openjfx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.mkpaz</groupId>
                <artifactId>atlantafx-base</artifactId>
                <version>2.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.kordamp.ikonli</groupId>
                <artifactId>ikonli-javafx</artifactId>
                <version>${ikonli.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kordamp.ikonli</groupId>
                <artifactId>ikonli-fontawesome5-pack</artifactId>
                <version>${ikonli.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.19.0</version>
            </dependency>
            <dependency>
                <groupId>com.github.pureconfig</groupId>
                <artifactId>pureconfig_${scala.major.version}</artifactId>
                <version>0.17.7</version>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.major.version}</artifactId>
                <version>3.2.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatestplus</groupId>
                <artifactId>scalacheck-1-15_${scala.major.version}</artifactId>
                <version>3.2.11.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalacheck</groupId>
                <artifactId>scalacheck_${scala.major.version}</artifactId>
                <version>1.15.4</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.13.0-M3</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testfx</groupId>
                <artifactId>testfx-junit5</artifactId>
                <version>4.0.18</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>app.logorrr</groupId>
                <artifactId>core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>app.logorrr</groupId>
                <artifactId>env</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>app.logorrr</groupId>
                <artifactId>app</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>app.logorrr.native</groupId>
                <artifactId>native-osx</artifactId>
                <classifier>dylibs</classifier>
                <type>zip</type>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>app.logorrr</groupId>
                <artifactId>app-tests</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>app.logorrr</groupId>
                <artifactId>build</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>app.logorrr.dist.repackaged</groupId>
                <artifactId>dist-repackaged</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>app.logorrr.dist.linux</groupId>
                <artifactId>app-image</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>3.1.0</version>
                    <executions>
                        <execution>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>create-metadata</goal>
                            </goals>
                            <configuration>
                                <addOutputDirectoryToResources>true</addOutputDirectoryToResources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- to make intellij idea happy -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                    <configuration>
                        <source>8</source>
                        <target>8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>4.9.5</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <scalaVersion>${scala.version}</scalaVersion>
                        <failOnError>true</failOnError>
                        <args>
                            <arg>-deprecation</arg>
                            <arg>-encoding</arg>
                            <arg>utf-8</arg>
                            <arg>-explaintypes</arg>
                            <arg>-feature</arg>
                            <arg>-language:existentials</arg>
                            <arg>-language:experimental.macros</arg>
                            <arg>-language:higherKinds</arg>
                            <arg>-language:implicitConversions</arg>
                            <arg>-unchecked</arg>
                            <arg>-Xcheckinit</arg>
                            <arg>-Xlint:adapted-args</arg>
                            <arg>-Xlint:constant</arg>
                            <arg>-Xlint:delayedinit-select</arg>
                            <arg>-Xlint:doc-detached</arg>
                            <arg>-Xlint:inaccessible</arg>
                            <arg>-Xlint:infer-any</arg>
                            <arg>-Xlint:missing-interpolator</arg>
                            <arg>-Xlint:nullary-unit</arg>
                            <arg>-Xlint:option-implicit</arg>
                            <arg>-Xlint:package-object-classes</arg>
                            <arg>-Xlint:poly-implicit-overload</arg>
                            <arg>-Xlint:private-shadow</arg>
                            <arg>-Xlint:stars-align</arg>
                            <arg>-Xlint:type-parameter-shadow</arg>
                            <arg>-Ywarn-unused</arg>
                            <arg>-Yrangepos</arg>
                            <arg>-Werror</arg>
                        </args>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.17.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <execution>
                            <id>copy-meta-inf</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/src/main/resources/</directory>
                                        <filtering>false</filtering>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.build.directory}/classes/</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- to start application from command line and also to support gluonfx-maven-plugin's ability -->
                <!-- to activate a tracing agent via client:runagent -->
                <!-- see https://docs.oracle.com/en/graalvm/enterprise/19/guide/reference/native-image/tracing-agent.html -->
                <!-- and https://docs.gluonhq.com/#_clientrunagent -->
                <!--
                <plugin>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>0.0.8</version>
                    <configuration>
                        <mainClass>${main.class}</mainClass>
                    </configuration>
                </plugin>
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>com.gluonhq</groupId>
                    <artifactId>gluonfx-maven-plugin</artifactId>
                    <version>${gluonfx.plugin.version}</version>
                    <configuration>
                        <target>host</target>
                        <mainClass>${main.class}</mainClass>
                        <verbose>true</verbose>
                        <graalvmHome>${graalvm.home}</graalvmHome>
                        <verbose>true</verbose>
                        <nativeImageArgs>
                            <arg>--no-fallback</arg>
                            <arg>-H:-UseServiceLoaderFeature</arg>
                            <arg>-H:+UnlockExperimentalVMOptions</arg>
                            <arg>-Djdk.graal.LogFile=${graalvm.log}</arg>
                            <arg>--enable-native-access=ALL-UNNAMED</arg>
                        </nativeImageArgs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>execute-compile-and-link</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.3.0</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M9</version>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>2.2.0</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                        <parallel>true</parallel>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.5.0</version>
                    <executions>
                        <execution>
                            <id>apply-enforcer-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <phase>initialize</phase>
                            <configuration>
                                <rules>
                                    <!-- disable graalvm builds until https://github.com/rladstaetter/LogoRRR/issues/91 is resolved
                                                      <requireProperty>
                                                          <property>graalvm.home</property>
                                                          <message>You have to set 'graalvm.home' and point to a correct graalvm
                                                              installation.
                                                          </message>
                                                      </requireProperty>
                                                      <requireFilesExist>
                                                          <files>
                                                              <file>${graalvm.home}/GRAALVM-README.md</file>
                                                          </files>
                                                      </requireFilesExist>
                                                      -->
                                    <requireProperty>
                                        <property>jdk.home</property>
                                        <message>You have to set 'jdk.home' and point to a correct jdk
                                            installation.
                                        </message>
                                    </requireProperty>
                                    <requireMavenVersion>
                                        <version>[3.9.9,)</version>
                                        <message>Check for Maven version &gt;=3.9.9 failed. Upgrade your Maven
                                            installation.
                                        </message>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>24</version>
                                        <message>JDK 24 or newer is recommended to build LogoRRR, use SDKman.io or
                                            download from a JDK provider like this one:
                                            https://github.com/adoptium/temurin24-binaries/releases/download/jdk-24.0.1%2B9/OpenJDK24U-jdk_x64_windows_hotspot_24.0.1_9.zip
                                        </message>
                                    </requireJavaVersion>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>com.soebes.maven.plugins</groupId>
                    <artifactId>maven-echo-plugin</artifactId>
                    <version>0.1</version>
                </plugin>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>1.6.8</version>
                </plugin>
                <plugin>
                    <groupId>org.openjdk.jmh</groupId>
                    <artifactId>jmh-maven-plugin</artifactId>
                    <version>${jmh.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>clean</goal>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>1.2.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>timestamp-currentYear</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>currentYear</name>
                            <pattern>yyyy</pattern>
                            <timeZone>Europe/Vienna</timeZone>
                        </configuration>
                    </execution>
                    <execution>
                        <id>timestamp-currentDate</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>currentDate</name>
                            <pattern>yyyy-MM-dd</pattern>
                            <timeZone>Europe/Vienna</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>set-system-properties</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <property>
                                    <name>currentYear</name>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
