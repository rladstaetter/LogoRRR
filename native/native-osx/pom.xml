<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>app.logorrr.native</groupId>
        <artifactId>native</artifactId>
        <version>${revision}${changelist}</version>
    </parent>

    <artifactId>native-osx</artifactId>
    <name>app.logorrr.native.osx</name>
    <packaging>pom</packaging>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <!-- generate header file when methods declared as native change -->
                    <execution>
                        <id>generate-header-file</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${jdk.javac}</executable>
                            <workingDirectory>target</workingDirectory>
                            <arguments>
                                <argument>-h</argument>
                                <argument>${project.basedir}/src/main/c</argument>
                                <argument>${project.basedir}/../../app/src/main/java/app/logorrr/OsxBridge.java</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- compile swift code -->
                    <execution>
                        <id>compile-swift-code</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${osx.swiftc}</executable>
                            <workingDirectory>src/main/c</workingDirectory>
                            <arguments>
                                <argument>${project.basedir}/src/main/c/LogoRRRSwift.swift</argument>
                                <argument>-emit-library</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/libLogoRRRSwift.dylib</argument>
                                <argument>-Xlinker</argument>
                                <argument>-install_name</argument>
                                <argument>-Xlinker</argument>
                                <argument>${project.build.directory}/libLogoRRRSwift.dylib</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- compile c code -->
                    <execution>
                        <id>compile-c-code</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${osx.gcc}</executable>
                            <workingDirectory>target</workingDirectory>
                            <arguments>
                                <argument>-I${env.JAVA_HOME}/include</argument>
                                <argument>-I${env.JAVA_HOME}/include/darwin/</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/libLogoRRR.dylib</argument>
                                <argument>-dynamiclib</argument>
                                <argument>${project.basedir}/src/main/c/OsxBridge.c</argument>
                                <argument>${project.build.directory}/libLogoRRRSwift.dylib</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <!-- get rid of generated class files in src/main/java -->
                    <execution>
                        <id>clean-class-file</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>../../app/src/main/java/</directory>
                                    <includes>
                                        <include>**/*.class</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>create-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>dylibs.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>